rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Chat rooms can be read by any authenticated user.
    // A user can create a room, but cannot update or delete it.
    match /chatRooms/{geohash} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && incomingData().geohash == geohash && incomingData().createdAt == request.time;
      allow update, delete: if false; // Nobody can update or delete from the client

      // A user can read messages in any room.
      // They can only create messages, and only as themselves.
      match /messages/{messageId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null 
                      && incomingData().senderId == request.auth.uid
                      && incomingData().text is string
                      && incomingData().text.size() > 0 && incomingData().text.size() < 300
                      && incomingData().timestamp == request.time
                      && (!('replyTo' in incomingData()) || (incomingData().replyTo is string && incomingData().replyToText is string));
        allow update, delete: if false; // No one can edit or delete messages from the client
      }

      // Rules for presence in a chat room
      match /users/{userId} {
        allow read: if request.auth != null;
        allow write: if request.auth.uid == userId;
      }
    }

    // Users can create a profile for themselves, but cannot edit or delete it.
    match /users/{userId} {
      allow create: if request.auth.uid == userId;
      allow read: if request.auth != null;
      allow update: if request.auth.uid == userId 
                    && request.resource.data.keys().hasAny(['name', 'avatarUrl']);
      allow delete: if false;
    }

    function incomingData() {
      return request.resource.data;
    }
  }
}